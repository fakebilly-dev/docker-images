input {
    beats {
        port => 5044
    }
}

filter {
    grok {
        match => [
            "message" , "\[(?<log.time>([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}))\]\s\[(?<application.name>([A-Za-z\-]+))\]\s\[(?<log.traceid>([A-Za-z0-9:\./\s]{6,}))\]\s\[(?<log.level>(INFO|WARN|ERROR|DEBUG))\]\s\[(?<log.pid>.*)\]\s\[(?<log.thread>.*)\]\s\[(?<log.class>([A-Za-z0-9\.]+))\]\s:\s(?<msg>.*)"
        ]
    }
    mutate {
      add_field => { "tmp.log.time" => "%{[log.time]}" }
    }
    date {
      match => ["tmp.log.time", "yyyy-MM-dd HH:mm:ss.SSS", "ISO8601"]
      timezone => "+08:00"
      target => "@timestamp"
    }
    mutate {
      update => { "message" => "%{[msg]}" }
      remove_field => ["agent", "host", "input", "tags", "ecs", "container", "stream", "@version", "msg", "tmp.log.time", "log.time"]
    }
    if [log.traceid] =~ "(.*TID.*N/A.*)" or [log.traceid] =~ "(.*TID.*Ignored.*)" {
      mutate {
        remove_field => ["log.traceid"]
      }
    } else {
      if [log.traceid] =~ "(.*TID:.*)" {
        mutate {
          gsub => ["log.traceid", "TID:", ""]
        }
      }
    }
    if [log.level] !~ "(ERROR|WARN|INFO|DEBUG)" {
      drop {}
    }
}

output {
    #stdout {
        #codec => rubydebug
    #}
    elasticsearch {
        hosts => ["http://127.0.0.1:19200/"]
        index => "logs-%{+YYYY.MM.ww}"
        user => "logstash_system"
        password => "LZ4N4jUFbg5C"
        action => "create"
    }

}